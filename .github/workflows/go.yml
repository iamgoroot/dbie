name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres_bun:
        image: postgres
        env:
          POSTGRES_DB: test
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres_gorm:
        image: postgres
        env:
          POSTGRES_DB: test
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
          POSTGRES_PORT: 5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.18'
      - name: Install dependencies
        run: |
          go version
      - name: Build
        run: go build .

      - name: Test With Coverage
        run: |
          go test -gcflags=-l -v  -coverprofile=coverage0.txt -coverpkg=../... -covermode=atomic ./...
          cat coverage0.txt >> coverage.txt
          cd test && go get ./... && go test -gcflags=-l -v  -coverprofile=../coverage1.txt -coverpkg=../... -covermode=atomic ./...
          pwd
          cat coverage1.txt >> coverage.txt
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          flags: unittests
          fail_ci_if_error: true
          verbose: true
      - name: Run Vet
        run:  go vet ./...
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
